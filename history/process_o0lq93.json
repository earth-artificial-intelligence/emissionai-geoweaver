[{
  "history_id" : "728n3ra6e4b",
  "history_input" : "\"\"\" \nCheck if host machine contains required packages to run this process. \nIf packages are not available, this process will install them.\nThis process will get surface temperature, bias-corrected precipitation, \ncloud fraction, and surface wind speed from different MERRA-2 collections,\nresample them to daily data and save to a csv file.\nUser can specify duration of data to extract in lines (67 - 71).\nNOTE: This process also needs a NASA Earthdata account.\nPlease update line 46 with a username and password to proceed with execution.\n \"\"\"\n\nimport sys\nimport subprocess\nimport pkg_resources\n\n# Required packages to run this process.\nrequired = {'xarray', 'netCDF4', 'dask', 'pandas'}\ninstalled = {pkg.key for pkg in pkg_resources.working_set}\nmissing = required - installed\n\nif missing:\n    print(\"Packages missing and will be installed: \", missing)\n    python = sys.executable\n    subprocess.check_call(\n        [python, '-m', 'pip', 'install', *missing], stdout=subprocess.DEVNULL)\n\n################################\n#  END OF PACKAGES VALIDATION  #\n################################\n\n\n##############################################\n#  NASA Earthdata account credentials setup  #\n##############################################\n\n# get current user home directory to create necessary file for earthdata access.\nfrom os.path import expanduser\nhome_dir = expanduser(\"~\")\n\n# create .netrc file to insert earthdata username and password\nopen(home_dir + '/.netrc', 'w').close()\nopen(home_dir + '/.urs_cookies', 'w').close()\nsubprocess.check_call(\n    ['echo \"machine urs.earthdata.nasa.gov login <username> password <password>\" >> ' + home_dir + '/.netrc'], shell=True)\n\nopen(home_dir + '/.dodsrc', 'w').close()\nsubprocess.check_call(\n    ['echo \"HTTP.COOKIEJAR=' + home_dir + '/.urs_cookies\" >> ' + home_dir + '/.dodsrc'], shell=True)\nsubprocess.check_call(\n    ['echo \"HTTP.NETRC=' + home_dir + '/.netrc\" >> ' + home_dir + '/.dodsrc'], shell=True)\n\n#####################################################\n#  END OF NASA Earthdata account credentials setup  #\n#####################################################\n\n\n\"\"\" Extract MERRA-2 Hourly data for the month of January 2019 \"\"\"\nimport pandas as pd\nimport dask\nimport netCDF4\nimport xarray as xr\n\n\n# Time frame of MERRA-2 data to collect\nyear = '2019'\nmonth_begin = '01'\nmonth_end = '03'\nday_begin = '01'\nday_end = '31'\n\n# MERRA-2 M2I1NXASM collection (hourly) to get Temp and Wind variables (T2M, V2M).\ncollection_shortname = 'M2I1NXASM'\ncollection_longname = 'inst1_2d_asm_Nx'\ncollection_number = 'MERRA2_400'\nMERRA2_version = '5.12.4'\n\n\n# OPeNDAP URL\nurl = 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/{}.{}/{}'.format(\n    collection_shortname, MERRA2_version, year)\nfiles_month = ['{}/{}/{}.{}.{}{}.nc4'.format(url, month_days[0:2], collection_number, collection_longname, year, month_days)\n               for month_days in pd.date_range(year + '-' + month_begin + '-' + day_begin, year + '-' + month_end + '-' + day_end, freq='D').strftime(\"%m%d\").tolist()]\n\n\n# Get the number of files\nlen_files_month = len(files_month)\n\n\nprint(\"{} files to be opened:\".format(len_files_month))\nprint(\"files_month\", files_month)\n\n# Read dataset URLs\nds = xr.open_mfdataset(files_month)\n\n\n# MERRA-2 M2T1NXLND collection (hourly) to get Total precipitation variable (PRECTOTLAND).\ncollection_shortname = 'M2T1NXLND'\ncollection_longname = 'tavg1_2d_lnd_Nx'\ncollection_number = 'MERRA2_400'\nMERRA2_version = '5.12.4'\n\n\n# OPeNDAP URL\nurl = 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/{}.{}/{}'.format(\n    collection_shortname, MERRA2_version, year)\nfiles_month = ['{}/{}/{}.{}.{}{}.nc4'.format(url, month_days[0:2], collection_number, collection_longname, year, month_days)\n               for month_days in pd.date_range(year + '-' + month_begin + '-' + day_begin, year + '-' + month_end + '-' + day_end, freq='D').strftime(\"%m%d\").tolist()]\n\n# Get the number of files\nlen_files_month = len(files_month)\n\n\nprint(\"{} files to be opened:\".format(len_files_month))\nprint(\"files_month\", files_month)\n\n# Read dataset URLs\nds_precip = xr.open_mfdataset(files_month)\n\n\n# MERRA-2 M2T1NXRAD collection (hourly) to get Cloud Fraction variable (CLDTOT).\ncollection_shortname = 'M2T1NXRAD'\ncollection_longname = 'tavg1_2d_rad_Nx'\ncollection_number = 'MERRA2_400'\nMERRA2_version = '5.12.4'\n\n\n# OPeNDAP URL\nurl = 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/{}.{}/{}'.format(\n    collection_shortname, MERRA2_version, year)\nfiles_month = ['{}/{}/{}.{}.{}{}.nc4'.format(url, month_days[0:2], collection_number, collection_longname, year, month_days)\n               for month_days in pd.date_range(year + '-' + month_begin + '-' + day_begin, year + '-' + month_end + '-' + day_end, freq='D').strftime(\"%m%d\").tolist()]\n\n# Get the number of files\nlen_files_month = len(files_month)\n\n\nprint(\"{} files to be opened:\".format(len_files_month))\nprint(\"files_month\", files_month)\n\n# Read dataset URLs\nds_cloud = xr.open_mfdataset(files_month)\n\n\n# extract values from all datasets based on location (Alabama plant)\nalabama_plant_temp_wind = ds.sel(lat=31.48, lon=-87.91, method='nearest')\nalabama_plant_temp_wind = alabama_plant_temp_wind[['T2M', 'V2M']]\n\nalabama_plant_precip = ds_precip.sel(lat=31.48, lon=-87.91, method='nearest')\nalabama_plant_precip = alabama_plant_precip[['PRECTOTLAND']]\n\nalabama_plant_cloud = ds_cloud.sel(lat=31.48, lon=-87.91, method='nearest')\nalabama_plant_cloud = alabama_plant_cloud[['CLDTOT']]\n\n\n# Resample all datasets by day\nalabama_plant_temp_wind_mean = alabama_plant_temp_wind.resample(\n    time=\"1D\").mean(dim='time', skipna=True)\nalabama_plant_precip_mean = alabama_plant_precip.resample(\n    time=\"1D\").mean(dim='time', skipna=True)\nalabama_plant_cloud_mean = alabama_plant_cloud.resample(\n    time=\"1D\").mean(dim='time', skipna=True)\n\n# Convert datasets to pandas df and save to CSV file.\nalabama_plant_temp_wind_mean_df = alabama_plant_temp_wind_mean.to_dataframe()\nalabama_plant_precip_mean_df = alabama_plant_precip_mean.to_dataframe()\nalabama_plant_cloud_mean_df = alabama_plant_cloud_mean.to_dataframe()\n\nmerged_dfs = alabama_plant_temp_wind_mean_df.merge(\n    alabama_plant_precip_mean_df, on='time').merge(alabama_plant_cloud_mean_df, on='time')\nmerged_dfs = merged_dfs[['T2M', 'V2M', 'PRECTOTLAND', 'CLDTOT']]\n\nmerged_dfs.to_csv(home_dir + '/merra2_daily_mean_January_2019.csv')",
  "history_output" : "syntax error, unexpected WORD_WORD, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR\ncontext: HTTP^ Basic: Access denied.\nsyntax error, unexpected WORD_WORD, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR\ncontext: HTTP^ Basic: Access denied.\nsyntax error, unexpected WORD_WORD, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR\ncontext: HTTP^ Basic: Access denied.\nsyntax error, unexpected WORD_WORD, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR\ncontext: HTTP^ Basic: Access denied.\nsyntax error, unexpected WORD_WORD, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR\ncontext: HTTP^ Basic: Access denied.\nsyntax error, unexpected WORD_WORD, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR\ncontext: HTTP^ Basic: Access denied.\nsyntax error, unexpected WORD_WORD, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR\ncontext: HTTP^ Basic: Access denied.\nPackages missing and will be installed:  {'netCDF4'}\n90 files to be opened:\nfiles_month ['https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190101.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190102.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190103.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190104.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190105.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190106.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190107.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190108.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190109.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190110.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190111.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190112.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190113.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190114.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190115.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190116.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190117.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190118.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190119.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190120.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190121.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190122.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190123.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190124.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190125.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190126.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190127.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190128.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190129.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190130.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/01/MERRA2_400.inst1_2d_asm_Nx.20190131.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190201.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190202.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190203.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190204.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190205.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190206.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190207.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190208.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190209.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190210.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190211.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190212.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190213.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190214.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190215.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190216.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190217.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190218.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190219.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190220.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190221.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190222.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190223.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190224.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190225.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190226.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190227.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/02/MERRA2_400.inst1_2d_asm_Nx.20190228.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190301.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190302.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190303.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190304.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190305.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190306.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190307.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190308.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190309.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190310.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190311.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190312.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190313.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190314.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190315.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190316.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190317.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190318.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190319.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190320.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190321.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190322.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190323.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190324.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190325.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190326.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190327.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190328.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190329.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190330.nc4', 'https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2I1NXASM.5.12.4/2019/03/MERRA2_400.inst1_2d_asm_Nx.20190331.nc4']\nTraceback (most recent call last):\n  File \"data_merra2_extraction.py\", line 93, in <module>\n    ds = xr.open_mfdataset(files_month)\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/api.py\", line 908, in open_mfdataset\n    datasets = [open_(p, **open_kwargs) for p in paths]\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/api.py\", line 908, in <listcomp>\n    datasets = [open_(p, **open_kwargs) for p in paths]\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/api.py\", line 495, in open_dataset\n    backend_ds = backend.open_dataset(\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/netCDF4_.py\", line 564, in open_dataset\n    ds = store_entrypoint.open_dataset(\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/store.py\", line 27, in open_dataset\n    vars, attrs, coord_names = conventions.decode_cf_variables(\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/conventions.py\", line 512, in decode_cf_variables\n    new_vars[k] = decode_cf_variable(\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/conventions.py\", line 360, in decode_cf_variable\n    var = times.CFDatetimeCoder(use_cftime=use_cftime).decode(var, name=name)\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/coding/times.py\", line 526, in decode\n    dtype = _decode_cf_datetime_dtype(data, units, calendar, self.use_cftime)\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/coding/times.py\", line 149, in _decode_cf_datetime_dtype\n    [first_n_items(values, 1) or [0], last_item(values) or [0]]\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/core/formatting.py\", line 72, in first_n_items\n    return np.asarray(array).flat[:n_desired]\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/core/indexing.py\", line 357, in __array__\n    return np.asarray(self.array, dtype=dtype)\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/core/indexing.py\", line 422, in __array__\n    return np.asarray(array[self.key], dtype=None)\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/netCDF4_.py\", line 90, in __getitem__\n    return indexing.explicit_indexing_adapter(\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/core/indexing.py\", line 711, in explicit_indexing_adapter\n    result = raw_indexing_method(raw_key.tuple)\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/netCDF4_.py\", line 103, in _getitem\n    array = getitem(original_array, key)\n  File \"/opt/anaconda3/lib/python3.8/site-packages/xarray/backends/common.py\", line 64, in robust_getitem\n    return array[key]\n  File \"src/netCDF4/_netCDF4.pyx\", line 4406, in netCDF4._netCDF4.Variable.__getitem__\n  File \"src/netCDF4/_netCDF4.pyx\", line 5350, in netCDF4._netCDF4.Variable._get\n  File \"src/netCDF4/_netCDF4.pyx\", line 1927, in netCDF4._netCDF4._ensure_nc_success\nRuntimeError: NetCDF: Authorization failure\n",
  "history_begin_time" : 1651521746763,
  "history_end_time" : 1651521821171,
  "history_notes" : null,
  "history_process" : "o0lq93",
  "host_id" : "100001",
  "indicator" : "Done"
},]
